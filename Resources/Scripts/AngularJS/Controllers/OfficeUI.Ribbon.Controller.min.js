var OfficeUIRibbon=angular.module("OfficeUIRibbon");OfficeUIRibbon.controller("OfficeUIRibbon",["$scope","$http","OfficeUIRibbonService",function(a,c,b){a.OfficeUIRibbon.ribbonStates={};c.get($.fn.OfficeUI.ribbonDataFile).success(function(d){b.setServiceInstance(d);a.OfficeUIRibbon=b.getServiceInstance()}).error(function(d){console.error("An error occured while loading the file '"+$.fn.OfficeUI.ribbonDataFile+"' file. ")});a.isRibbonShowed=function(){return a.OfficeUIRibbon.state==a.OfficeUIRibbon.ribbonStates.Showed};a.isRibbonVisible=function(){return a.OfficeUIRibbon.state==a.OfficeUIRibbon.ribbonStates.Visible};a.isRibbonHidden=function(){return a.OfficeUIRibbon.state==a.OfficeUIRibbon.ribbonStates.Hidden};a.toggleRibbonState=function(){if(a.OfficeUIRibbon.state==a.OfficeUIRibbon.ribbonStates.Showed){a.OfficeUIRibbon.state=a.OfficeUIRibbon.ribbonStates.Hidden}else{if(a.OfficeUIRibbon.state==a.OfficeUIRibbon.ribbonStates.Visible){a.OfficeUIRibbon.state=a.OfficeUIRibbon.ribbonStates.Showed}}};a.contextualGroupHasAnActiveTab=function(e){if(a.OfficeUIRibbon.activeContextualGroups.length==0){return false}else{var d=$.grep(e.Tabs,function(f){return f.Id==a.OfficeUIRibbon.activeTab});return d.length>0}}}]);